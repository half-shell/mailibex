name: Build and test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  linux:
    strategy:
      matrix:
        versions:
          - os: 'ubuntu-20.04'
            otp: '23.3.4.9'
            elixir: '1.13.4-otp23'
          - os: 'ubuntu-22.04'
            otp: '25.3.2.9'
            elixir: '1.15.7-otp-25'
          - os: 'win22'
            otp: '25.3.2.9'
            elixir: '1.15.7-otp-25'
    runs-on: ${{matrix.versions.os}}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Elixir
      uses: erlef/setup-beam@v1.17.5
      with:
        elixir-version: ${{matrix.versions.elixir}}
        otp-version: ${{matrix.versions.otp}}

    # Define how to cache deps. Restores existing cache if present.
    - name: Cache deps
      id: cache-deps
      uses: actions/cache@v3
      env:
        cache-name: cache-elixir-deps
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-${{env.cache-name}}

    # Define how to cache the `_build` directory. After the first run,
    # this speeds up tests runs a lot. This includes not re-compiling our
    # project's downloaded deps every run.
    - name: Cache compiled build
      id: cache-build
      uses: actions/cache@v3
      env:
        cache-name: cache-compiled-build
      with:
        path: _build
        key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ env.cache-name }}-
          ${{ runner.os }}-mix-

    - name: Install dependencies
      run: |
        mix deps.get

    - name: Run tests
      run: mix test

  macos:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - name: Install asdf
        uses: asdf-vm/actions/setup@v2

      - name: Cache asdf
        id: asdf-cache
        uses: actions/cache@v3
        with:
          path: ~/.asdf
          key: asdf-${{ runner.os }}-build

      - if: ${{ steps.asdf-cache.outputs.cache-hit != 'true' }}
        name: Install Erlang & Elixir
        env:
          ELIXIR_VERSION: 1.15.7
          OTP_VERSION: 25.3.2.9
        run: |
          asdf plugin-add erlang
          asdf install erlang ${OTP_VERSION}

          ELIXIR_OTP_VERSION=$(echo $OTP_VERSION | cut -d. -f1)
          asdf plugin-add elixir
          asdf install elixir ${ELIXIR_VERSION}-otp-${ELIXIR_OTP_VERSION}

      - name: Setup Erlang & Elixir
        env:
          ELIXIR_VERSION: 1.15.7
          OTP_VERSION: 25.3.2.9
        run: |
          asdf global erlang ${OTP_VERSION}
          ELIXIR_OTP_VERSION=$(echo $OTP_VERSION | cut -d. -f1)
          asdf global elixir ${ELIXIR_VERSION}-otp-${ELIXIR_OTP_VERSION}

      - name: Install hex & rebar
        run: |
          mix local.hex --force
          mix local.rebar --force

      - name: Install dependencies
        run: |
          mix deps.get

      - name: Run tests
        run: mix test
